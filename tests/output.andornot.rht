evaluated to 5
evaluated to 5
evaluated to 5
evaluated to 5
evaluated to 5
(bool) false
(bool) true
(bool) true
(bool) false
(bool) false

define i64 @0() {
entry:
  %value = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value = bitcast i8* %value to %value_t*
  %boxptr = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 0
  %boxptr1 = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 2
  store i32 2, i32* %boxptr
  store i1 false, i1* %boxptr1
  %value2 = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value3 = bitcast i8* %value2 to %value_t*
  %boxptr4 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 0
  %boxptr5 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 2
  store i32 2, i32* %boxptr4
  store i1 true, i1* %boxptr5
  %call = call %value_t* @cand(%value_t* %malloc_value3, %value_t* %malloc_value)
  %call6 = call %value_t* @println(%value_t* %call)
  %boxptr7 = getelementptr inbounds %value_t* %call6, i32 0, i32 1
  %load = load i64* %boxptr7
  ret i64 %load
}


define i64 @1() {
entry:
  %value = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value = bitcast i8* %value to %value_t*
  %boxptr = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 0
  %boxptr1 = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 2
  store i32 2, i32* %boxptr
  store i1 true, i1* %boxptr1
  %value2 = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value3 = bitcast i8* %value2 to %value_t*
  %boxptr4 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 0
  %boxptr5 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 2
  store i32 2, i32* %boxptr4
  store i1 true, i1* %boxptr5
  %call = call %value_t* @cand(%value_t* %malloc_value3, %value_t* %malloc_value)
  %call6 = call %value_t* @println(%value_t* %call)
  %boxptr7 = getelementptr inbounds %value_t* %call6, i32 0, i32 1
  %load = load i64* %boxptr7
  ret i64 %load
}


define i64 @2() {
entry:
  %value = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value = bitcast i8* %value to %value_t*
  %boxptr = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 0
  %boxptr1 = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 2
  store i32 2, i32* %boxptr
  store i1 false, i1* %boxptr1
  %value2 = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value3 = bitcast i8* %value2 to %value_t*
  %boxptr4 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 0
  %boxptr5 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 2
  store i32 2, i32* %boxptr4
  store i1 true, i1* %boxptr5
  %call = call %value_t* @cor(%value_t* %malloc_value3, %value_t* %malloc_value)
  %call6 = call %value_t* @println(%value_t* %call)
  %boxptr7 = getelementptr inbounds %value_t* %call6, i32 0, i32 1
  %load = load i64* %boxptr7
  ret i64 %load
}


define i64 @3() {
entry:
  %value = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value = bitcast i8* %value to %value_t*
  %boxptr = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 0
  %boxptr1 = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 2
  store i32 2, i32* %boxptr
  store i1 false, i1* %boxptr1
  %value2 = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value3 = bitcast i8* %value2 to %value_t*
  %boxptr4 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 0
  %boxptr5 = getelementptr inbounds %value_t* %malloc_value3, i32 0, i32 2
  store i32 2, i32* %boxptr4
  store i1 false, i1* %boxptr5
  %call = call %value_t* @cor(%value_t* %malloc_value3, %value_t* %malloc_value)
  %call6 = call %value_t* @println(%value_t* %call)
  %boxptr7 = getelementptr inbounds %value_t* %call6, i32 0, i32 1
  %load = load i64* %boxptr7
  ret i64 %load
}


define i64 @4() {
entry:
  %value = call i8* @malloc(i64 ptrtoint (%value_t* getelementptr (%value_t* null, i32 1) to i64))
  %malloc_value = bitcast i8* %value to %value_t*
  %boxptr = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 0
  %boxptr1 = getelementptr inbounds %value_t* %malloc_value, i32 0, i32 2
  store i32 2, i32* %boxptr
  store i1 false, i1* %boxptr1
  %call = call %value_t* @println(%value_t* %malloc_value)
  %boxptr2 = getelementptr inbounds %value_t* %call, i32 0, i32 1
  %load = load i64* %boxptr2
  ret i64 %load
}

